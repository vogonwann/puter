name: Flatpak Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        arch: [amd64, arm64]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Flatpak
      run: |
        sudo apt-get update
        sudo apt-get install -y flatpak flatpak-builder

    - name: Set up Flatpak environment
      run: |
        sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        sudo flatpak install -y flathub org.gnome.Platform//47 org.gnome.Sdk//47

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.arch == 'arm64' && 'aarch64-unknown-linux-gnu' || 'x86_64-unknown-linux-gnu' }}

    - name: Install cross-compilation tools
      if: matrix.arch == 'arm64'
      run: |
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Build
      run: |
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
          cargo build --release --target aarch64-unknown-linux-gnu
        else
          cargo build --release
        fi

    - name: Prepare Flatpak files
      run: |
        mkdir -p flatpak-build/bin
        mkdir -p flatpak-build/share/icons/hicolor/scalable/apps
        mkdir -p flatpak-build/share/applications
        mkdir -p flatpak-build/share/metainfo
        mkdir -p flatpak-build/share/locale/sr_RS/LC_MESSAGES
        
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          cp target/aarch64-unknown-linux-gnu/release/puter flatpak-build/bin/
        else
          cp target/release/puter flatpak-build/bin/
        fi
        
        cp data/icons/hicolor/scalable/apps/lol.janjic.puter.svg flatpak-build/share/icons/hicolor/scalable/apps/
        cp lol.janjic.puter.desktop flatpak-build/share/applications/
        cp lol.janjic.puter.metainfo.xml flatpak-build/share/metainfo/
        msgfmt -o puter.mo po/sr_RS/LC_MESSAGES/puter.po
        cp puter.mo flatpak-build/share/locale/sr_RS/LC_MESSAGES/

    - name: Build Flatpak
      run: |
        flatpak-builder --force-clean build-dir lol.janjic.puter.yml
        flatpak-builder --repo=repo --force-clean build-dir lol.janjic.puter.yml
        flatpak build-bundle repo puter-${{ matrix.arch }}.flatpak lol.janjic.puter

    - name: Upload Flatpak Bundle
      uses: actions/upload-artifact@v4
      with:
        name: puter-${{ matrix.arch }}.flatpak
        path: puter-${{ matrix.arch }}.flatpak 