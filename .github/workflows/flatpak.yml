name: Build and Deliver Binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libglib2.0-dev libcairo2-dev libgtk-4-dev libadwaita-1-dev gettext gettext-base gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
        libglib2.0-dev:arm64 libcairo2-dev:arm64 libgtk-4-dev:arm64 libadwaita-1-dev:arm64 libpango1.0-dev:arm64 libharfbuzz-dev:arm64 libgdk-pixbuf2.0-dev:arm64 \
        libcairo-gobject2:arm64 libvulkan-dev:arm64 libgraphene-1.0-dev:arm64 libgio2.0-dev:arm64 libgobject-2.0-dev:arm64 libglib2.0-dev:arm64

    - name: Install Rust
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source $HOME/.cargo/env
        rustup default stable
        rustup target add ${{ matrix.arch }}-unknown-linux-gnu

    - name: Configure Cargo for cross-compilation
      run: |
        mkdir -p .cargo
        echo '[target.aarch64-unknown-linux-gnu]' > .cargo/config.toml
        echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml

    - name: Build project
      run: |
        mkdir -p /tmp/build/target
        chmod 777 /tmp/build/target
        export CARGO_TARGET_DIR=/tmp/build/target
        export PKG_CONFIG_ALLOW_CROSS=1
        export PKG_CONFIG_PATH=/usr/lib/${{ matrix.arch }}-linux-gnu/pkgconfig:/usr/share/pkgconfig
        export CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc
        export CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++
        cargo build --release --target ${{ matrix.arch }}-unknown-linux-gnu

    - name: Upload Binary
      uses: actions/upload-artifact@v4
      with:
        name: puter-${{ matrix.arch }}
        path: /tmp/build/target/${{ matrix.arch }}-unknown-linux-gnu/release/puter